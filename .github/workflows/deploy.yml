name: Deploy to EC2

on:
  push:
    branches:
      - main

  pull_request:
    types:
      - closed
    branches:
      - main

jobs:
  deploy:
    environment: secrets
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Cache node modules
      uses: actions/cache@v3
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-

    - name: Setup SSH
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.EC2_KEY }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts

    - name: Push files to EC2
      run: |
        rsync -avz --ignore-missing-args --delete ./ ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }}:/home/${{ secrets.EC2_USER }}/app

    - name: Restart Nginx and App
      run: |
        ssh ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << EOF
          sudo nginx -t && sudo systemctl restart nginx
          cd /home/${{ secrets.EC2_USER }}/app
          echo "ServerAliveInterval 60" >> ~/.ssh/config
          echo "ServerAliveCountMax 5" >> ~/.ssh/config
          export NEXT_PUBLIC_BACKEND_URL="${{ secrets.BACKEND_URL }}"
          export NEXT_PUBLIC_DOMAIN="${{ secrets.FRONTEND_URL }}"
          sudo npm install -g pm2
          pm2 stop all
          pm2 delete all
          pm2 kill
          npm ci
          NEXT_PUBLIC_BACKEND_URL="${{ secrets.BACKEND_URL }}" \
          NEXT_PUBLIC_DOMAIN="${{ secrets.FRONTEND_URL }}" \
          npm run build
          pm2 start npm --name "root-frontend-app" -- start
        EOF
